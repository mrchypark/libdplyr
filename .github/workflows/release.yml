name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  # Create release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get tag name
      id: get_tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate release notes
      run: |
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -n "$PREV_TAG" ]; then
          echo "## Changes since $PREV_TAG" > release_notes.md
          echo "" >> release_notes.md
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> release_notes.md
        else
          echo "## Initial Release" > release_notes.md
          echo "" >> release_notes.md
          echo "This is the first release of libdplyr." >> release_notes.md
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        release_name: Release ${{ steps.get_tag.outputs.tag }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(steps.get_tag.outputs.tag, 'alpha') || contains(steps.get_tag.outputs.tag, 'beta') || contains(steps.get_tag.outputs.tag, 'rc') }}

  # Build binaries for different platforms
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            archive_name: libdplyr-linux-x86_64
          - target: x86_64-apple-darwin
            os: macos-latest
            archive_name: libdplyr-macos-x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            archive_name: libdplyr-windows-x86_64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust with caching
      uses: ./.github/actions/setup-rust-cache
      with:
        toolchain: stable
        targets: ${{ matrix.target }}
        cache-key-suffix: release-${{ matrix.target }}

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Prepare archive
      run: |
        mkdir -p dist
        
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp target/${{ matrix.target }}/release/libdplyr.exe dist/
          cd dist && 7z a ../${{ matrix.archive_name }}.zip *
        else
          cp target/${{ matrix.target }}/release/libdplyr dist/
          tar -czf ${{ matrix.archive_name }}.tar.gz -C dist .
        fi
      shell: bash

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ matrix.os == 'windows-latest' && format('{0}.zip', matrix.archive_name) || format('{0}.tar.gz', matrix.archive_name) }}
        asset_name: ${{ matrix.os == 'windows-latest' && format('{0}.zip', matrix.archive_name) || format('{0}.tar.gz', matrix.archive_name) }}
        asset_content_type: ${{ matrix.os == 'windows-latest' && 'application/zip' || 'application/gzip' }}

  # Publish to crates.io
  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: create-release
    if: ${{ !contains(github.ref_name, 'alpha') && !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'rc') }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust with caching
      uses: ./.github/actions/setup-rust-cache
      with:
        toolchain: stable
        cache-key-suffix: publish

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
      continue-on-error: true