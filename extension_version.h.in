#ifndef DPLYR_EXTENSION_VERSION_H
#define DPLYR_EXTENSION_VERSION_H

// R8-AC1: Version information for libdplyr DuckDB extension
// This file is automatically generated by CMake from extension_version.h.in

#define DPLYR_EXTENSION_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define DPLYR_EXTENSION_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define DPLYR_EXTENSION_VERSION_PATCH @PROJECT_VERSION_PATCH@
#define DPLYR_EXTENSION_VERSION "@PROJECT_VERSION@"

#define DUCKDB_MIN_VERSION "@DUCKDB_MIN_VERSION@"
#define DUCKDB_MAX_VERSION "@DUCKDB_MAX_VERSION@"

// Build information
#define DPLYR_EXTENSION_BUILD_TYPE "@CMAKE_BUILD_TYPE@"
#define DPLYR_EXTENSION_PLATFORM "@CMAKE_SYSTEM_NAME@"
#define DPLYR_EXTENSION_ARCH "@CMAKE_SYSTEM_PROCESSOR@"
#define DPLYR_EXTENSION_COMPILER "@CMAKE_CXX_COMPILER_ID@"

// Rust toolchain information
#define DPLYR_EXTENSION_RUST_TOOLCHAIN "@Rust_TOOLCHAIN@"
#define DPLYR_EXTENSION_RUST_TARGET "@RUST_HOST_TARGET@"

// Build timestamp (set at configure time)
#define DPLYR_EXTENSION_BUILD_TIMESTAMP "@BUILD_TIMESTAMP@"

// Feature flags
#cmakedefine01 DPLYR_EXTENSION_DEBUG_MODE
#cmakedefine01 DPLYR_EXTENSION_RELEASE_MODE

// Compatibility check macros
#define DPLYR_EXTENSION_VERSION_CHECK(major, minor, patch) \
    ((DPLYR_EXTENSION_VERSION_MAJOR > (major)) || \
     (DPLYR_EXTENSION_VERSION_MAJOR == (major) && DPLYR_EXTENSION_VERSION_MINOR > (minor)) || \
     (DPLYR_EXTENSION_VERSION_MAJOR == (major) && DPLYR_EXTENSION_VERSION_MINOR == (minor) && DPLYR_EXTENSION_VERSION_PATCH >= (patch)))

#endif // DPLYR_EXTENSION_VERSION_H