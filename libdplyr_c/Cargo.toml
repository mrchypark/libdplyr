[package]
name = "libdplyr_c"
version = "0.1.0"
edition = "2021"
description = "C-compatible API for libdplyr DuckDB extension"
license = "MIT"
authors = ["libdplyr contributors"]
build = "build.rs"

# R3-AC1: C ABI 호환성을 위한 정적/동적 라이브러리 생성
[lib]
crate-type = ["staticlib", "cdylib"]

[dependencies]
# 기존 libdplyr 크레이트 의존성
libdplyr = { path = ".." }
libc = "0.2"
thiserror = "1.0"

# R9-AC1: panic 안전성을 위한 의존성
# FFI 경계에서 panic을 catch하기 위해 std::panic 사용 (내장)
# 추가 의존성: 해시 계산을 위한 크레이트
lru = "0.12"

# R6-AC1: 캐싱을 위한 의존성
lazy_static = "1.4"

# R9-AC2: 입력 검증 및 보안을 위한 의존성
once_cell = "1.19"

[features]
default = []

[build-dependencies]
chrono = { version = "0.4", features = ["serde"] }

# R7-AC4: 성능 벤치마킹을 위한 의존성
[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
rand = "0.8"
glob = "0.3"

# 벤치마크 설정
[[bench]]
name = "transpile_benchmark"

[[bench]]
name = "extension_loading_benchmark"

[[bench]]
name = "simple_benchmark"

# R9-AC1: FFI 경계에서 panic 처리를 위한 설정
# panic = "unwind"로 설정하여 panic을 catch_unwind로 잡을 수 있도록 함
[profile.release]
panic = "unwind"

[profile.dev]
panic = "unwind"